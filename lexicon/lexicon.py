from database.database import database_obj as database
from types import MappingProxyType

LEXICON: dict[str, str] = {
    "/start": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.\n"
    "–ú–Ω–µ –Ω—É–∂–Ω—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –í–∞—Å.\n"
    "–í—ã –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤?",
    "enter_name": "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è.",
    "error_name": "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ—Å–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤.",
    "enter_age": "–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç.",
    "error_old": "–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä",
    "enter_gender": "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª.",
    "enter_height": "–í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç.",
    "error_height": "–†–æ—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.",
    "enter_weight": "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å.",
    "error_weight": "–í–µ—Å –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.",
    "use_btn_pls": "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–Ω–æ–ø–∫–∞–º–∏ —Å–Ω–∏–∑—É.",
    "wait": "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É /start.",
    "questionnaire_ready": "–ê–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞!\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è.",
    "questionnaire_again": "–¢–æ–≥–¥–∞ –¥–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ.",
    "menu": "–ú–µ–Ω—é",
    "enter_name_workout": "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
    "create_workout_success": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∫–∞ —Å–æ–∑–¥–∞–Ω–∞",
    "repeat_name_workout": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏–±–æ —É–¥–∞–ª–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å —Ç–∞–∫–∏–º –∂–µ –Ω–∞–∑–≤–∞–Ω–∏–µ–º.",
    "select_archive": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏",
    "delete": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
    "dearchive": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –∞—Ä—Ö–∏–≤–∞",
    "workout": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞:",
    "enter_name_exercise": "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
    "repeat_name_exercise": "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
    "delete_exercise": "–í—ã–±–µ—Ä–∏—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è",
}

COMMANDS = MappingProxyType(
    {
        "/start": "üöÄ –°—Ç–∞—Ä—Ç üöÄ",
        "/help": "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ üìñ",
    }
)

BUTTON = MappingProxyType(
    {
        "yes": "‚úÖ –î–ê ‚úÖ",
        "no": "‚ùå –ù–ï–¢ ‚ùå",
        "male": "üë® –ú—É–∂—Å–∫–æ–π üë®",
        "female": "üë© –ñ–µ–Ω—Å–∫–∏–π üë©",
    }
)

MAIN_MENU = MappingProxyType(
    {
        "edit_workouts": "‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ‚öôÔ∏è",
    }
)

EDIT_ACTION = MappingProxyType({"ready": "‚úîÔ∏è –ì–æ—Ç–æ–≤–æ ‚úîÔ∏è"})

EDIT_WORKOUTS = MappingProxyType(
    {
        "create_workout": "‚ûï –°–æ–∑–¥–∞—Ç—å ‚ûï",
        "archive": "üì• –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å üì•",
        "delete": "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å üóëÔ∏è",
        "dearchive": "üì§ –î–æ–±–∞–≤–∏—Ç—å –∏–∑ –∞—Ä—Ö–∏–≤–∞ üì§",
        "main_menu": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†",
    }
)

WORKOUT_MENU = MappingProxyType(
    {
        "start": "‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç ‚ñ∂Ô∏è",
        "main_menu": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†",
    }
)

START_WORKOUT = MappingProxyType(
    {
        "new": "üÜï –ù–æ–≤–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ üÜï",
        "other": "üîÑ –î—Ä—É–≥–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ üîÑ",
        "delete": "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É üóëÔ∏è",
        "end": "üèÅ –ö–æ–Ω–µ—Ü —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üèÅ",
    }
)

DO_EXERCISE = MappingProxyType(
    {
        "finish": "‚úÖ –ó–∞–∫–æ–Ω—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ‚úÖ",
        "history": "üìú –ò—Å—Ç–æ—Ä–∏—è üìú",
    }
)

OTHER_EXERCISE = MappingProxyType(
    {
        "back": "‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è",
    }
)

HISTORY_EXERCISE = MappingProxyType(
    {
        "back": "‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è",
    }
)

DELETE_EXERCISE = MappingProxyType(
    {
        "back": "‚Ü©Ô∏è –ù–∞–∑–∞–¥ ‚Ü©Ô∏è",
    }
)


async def weight_workout(workout: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —Å –≤–µ—Å–∞–º–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
    data = await database.get_weight_workout(workout)
    return "\n".join([f"{i}: {j}" for i, j, _ in data])


async def workout_type_text(workout_type: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∏—Ä–æ–≤–∫–∏"""
    res = await database.get_name_workout_type(workout_type) + "\n\n"
    # –ø–æ–ª—É—á–∞–µ–º id –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    ids = await database.get_latest_workout_ids(workout_type)
    ids.reverse()
    for i in ids:
        date = await database.get_date_workout(i)
        weights = await weight_workout(i)
        res += date + "\n" + weights + "\n\n"

    return res


async def workout_end_text(workout: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
    info = await database.get_info_workout(workout)
    name = await database.get_name_workout_type(info[3])

    res = f"{name}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - {info[2]} –º–∏–Ω\n\n" + await weight_workout(
        workout
    )

    return res


async def history_exercise(exercise_type: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è"""
    data = await database.get_exercise_history(exercise_type)
    res = ""
    for name, date, time, weights in data:
        res += f"{name}. {date} {time} - {weights}\n"
    return res


def create_questionnaire_text(data: dict) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –∞–Ω–∫–µ—Ç–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return (
        "–í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n\n"
        f"–ò–º—è - {data['name']}\n"
        f"–í–æ–∑—Ä–∞—Å—Ç - {data['old']}\n"
        f"–ü–æ–ª - {data['gender']}\n"
        f"–†–æ—Å—Ç - {data['height']}\n"
        f"–í–µ—Å - {data['weight']}\n"
        "\n–í—Å–µ –≤–µ—Ä–Ω–æ?"
    )
